#!/bin/bash

# Set up the VARIABLES
cd "$WORKING_DIR"
source script/bootstrap

echo -e "********* Set up a Services Host"
echo "********* Creating a virtualbox machine called HostZ"
docker-machine create $DRIVER_OPTS "HostZ"

echo "********* Start a Zookeeper Container running on the HostZ machine"
docker $(docker-machine config "HostZ") run -d \
    -p "8181:8181" \
	-p "2181:2181" \
	-p "2888:2888" \
	-p "3888:3888" \
    -h "zookeeper" \
    jplock/zookeeper

echo "********* Building container: dnsmasq-eureka"
eval $(docker-machine env HostZ)
cd "$DNSMASQ_DIR" && \
docker build -t danigiri/docker-dnsmasq .
cd "$WORKING_DIR"/dnsmasq && \
docker build -t dnsmasq-eureka .

echo "********* Creating $NUM Hosts for Eureka and Production Nodes"
for (( i = 0; i < $NUM; i++ )); do
	docker-machine create $DRIVER_OPTS \
	--engine-opt="cluster-store=zk://$(docker-machine ip "HostZ"):2181" \
	--engine-opt="cluster-advertise=eth1:2376" \
	 "Host$i"
done

echo "********* Create the overlay networks"
# it's only needed to create on one of the nodes of the cluster
eval $(docker-machine env Host0)
#https://docs.docker.com/engine/userguide/networking/work-with-networks/
#https://docs.docker.com/engine/reference/commandline/network_create/
docker network create --driver overlay \
--subnet=192.168.1.0/24 \
--gateway=192.168.1.1 \
--ip-range=192.168.1.128/25 \
"$NETS"

docker network create --driver overlay \
--subnet=192.168.2.0/24 \
--gateway=192.168.2.1 \
--ip-range=192.168.2.128/25 \
"$NETP"

echo "********* Creating one container inside each node and attaching to $NETS"
for (( i = 0; i < $NUM; i++ )); do
	eval $(docker-machine env "Host${i}")
	docker run -d --name="Node${i}" --net="${NETS}" --env="constraint:node==Host${i}" gliderlabs/alpine sh -c "sleep 3000"
	echo "********* Building container: docker-eureka"
	cd "$WORKING_DIR"/eureka
	docker build -t docker-eureka .
	docker run -d --name="Eureka${i}" --net="${NETS}" --env="constraint:node==Eureka${i}" -p "808${i}":8080 docker-eureka
done
