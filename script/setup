#!/bin/bash

# Set up the VARIABLES
cd "$WORKING_DIR"
source script/bootstrap

echo -e "********* Set up a Services Host"
echo "********* Creating a virtualbox machine called HostZ for the cluster services"
docker-machine ls | grep "HostZ" >/dev/null
if [ $? -ne 0 ] ; then
	docker-machine create $DRIVER_OPTS "HostZ"
else
	echo "Host Z not created because already exists :)"
	docker-machine start "HostZ" >/dev/null 2>/dev/null
fi

echo "********* Start a Zookeeper Container running on the HostZ machine"
eval $(docker-machine env HostZ)
docker ps | grep "zookeeper" >/dev/null
if [ $? -ne 0 ] ; then
	docker $(docker-machine config "HostZ") run -d --name="zookeeper" \
	    -p "8181:8181" \
		-p "2181:2181" \
		-p "2888:2888" \
		-p "3888:3888" \
	    -h "zookeeper" \
	    jplock/zookeeper
else
	echo "Zookeeper not created because already exists :)"
		docker start "zookeeper" >/dev/null 2>/dev/null
fi

echo "********* Creating $NUM Hosts for Eureka and Production Nodes"
for (( i = 0; i < $NUM; i++ )); do
	docker-machine ls | grep "Host$i" >/dev/null
	if [ $? -ne 0 ] ; then
			docker-machine create $DRIVER_OPTS \
			--engine-opt="cluster-store=zk://$(docker-machine ip "HostZ"):2181" \
			--engine-opt="cluster-advertise=eth1:2376" \
			 "Host$i"
	else
		echo "Host$i not created because already exists :)"
		docker-machine start "Host$i" >/dev/null 2>/dev/null
	fi			 
done

echo "********* Create the overlay networks"
eval $(docker-machine env Host0)
#https://docs.docker.com/engine/userguide/networking/work-with-networks/
#https://docs.docker.com/engine/reference/commandline/network_create/

docker network ls | grep "$NETS" >/dev/null
if [ $? -ne 0 ] ; then
	docker network create --driver overlay \
	--subnet=192.168.1.0/24 \
	--gateway=192.168.1.1 \
	--ip-range=192.168.1.128/25 \
	"$NETS" >/dev/null 
else
	echo "$NETS not created because already exists :)"
fi
docker network ls | grep "$NETP" >/dev/null
if [ $? -ne 0 ] ; then
	docker network create --driver overlay \
	--subnet=192.168.2.0/24 \
	--gateway=192.168.2.1 \
	--ip-range=192.168.2.128/25 \
	"$NETP" >/dev/null
else
	echo "$NETP not created because already exists :)"
fi

echo "********* Creating one container inside each Host"
for (( i = 0; i < $NUM; i++ )); do
	eval $(docker-machine env "Host${i}")
	docker ps -a | grep "Node${i}" >/dev/null
	if [ $? -ne 0 ] ; then
		docker run -d --name="Node${i}" --net="${NETS}" --env="constraint:node==Host${i}" gliderlabs/alpine sh -c "sleep 3000"
		docker network connect "${NETP}" "Node${i}"
	else
		echo "Node${i} not created because already exists :)"
		docker start "Node${i}" >/dev/null 2>/dev/null
	fi	

	docker ps -a | grep "Eureka${i}" >/dev/null
	if [ $? -ne 0 ] ; then
		echo "********* Building container: docker-eureka"
		cd "$WORKING_DIR"/eureka
		docker build -t docker-eureka . >/dev/null
		docker run -d --name="Eureka${i}" --net="${NETS}" --env="constraint:node==Eureka${i}" -p "808${i}":8080 docker-eureka
	else
		echo "Eureka${i} not created because already exists :)"
		docker start "Eureka${i}" >/dev/null 2>/dev/null
	fi	
done
